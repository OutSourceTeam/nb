
*{
    margin: 0;
    padding: 0;
    -webkit-box-sizing:border-box;
    box-sizing:border-box;
}

*:not(input) {
  // -webkit-user-select: none;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-touch-callout: none;
  -webkit-text-size-adjust: none;
}

body{
    font-family: "Helvetica W01 Roman",Helvetica,Arial,'Heiti SC','ST Heiti','华文黑体','Microsoft YaHei','雅黑体',SimHei,'黑体',sans-serif;
    color: #333;
    min-width: 1200px;
}

a{
    text-decoration: none;
    color: #337ab7;
    &:hover{
        text-decoration: underline;
    }
}

li{
    list-style: none;
}

button,a{
    outline: none;
    &:focus{
        outline: none;
    }
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    /* display: none; <- Crashes Chrome on hover */
    -webkit-appearance: none;
    margin: 0; /* <-- Apparently some margin are still there even though it's hidden */
}


input[type=number]{
    -moz-appearance:textfield;
}

input[type=text],input[type=number]{
    -webkit-appearance: none;
    appearance: none;
}

.vector-icon{
    display:inline-block;
}


input[type=radio]{
    -webkit-appearance: none;
    appearance:none;
    width: 14px;
    height: 14px;
    border: 1px solid #666;
    border-radius: 20px;
    position: relative;
    outline: none;

    &:focus{
        outline: none;
    }

    &:checked:after{
        content: "";
        position: absolute;
        width: 8px;
        height: 8px;
        display: inline-block;
        background-color: #666666;
        border-radius: 8px;
        top: 2px;
        left: 2px;
    }
}

.clearfix(){
    &:after {
        display: block;
        content: ".";
        height: 0;
        visibility: hidden;
        clear: both;
        font-size: 0;
        line-height: 0;
    }
}

// @维护人：张航

// CSS3前缀
.display(...){
    display: @arguments;
}
.display(@value)when(@value=flex){
    display:-webkit-box;
    display:-webkit-flex;
    display:-ms-flexbox;
    display:@value;
}
.display(@value)when(@value=inline-flex){
    display:-webkit-inline-box;
    display:-webkit-inline-flex;
    display:-ms-inline-flexbox;
    display:@value;
}
.flexbox(){
    display:-webkit-box;
    display:-webkit-flex;
    display:-ms-flexbox;
    display:flex;
}
.flex(@v:1){
    -webkit-box-flex:@v;
    -webkit-flex:@v;
    -ms-flex:@v;
    flex:@v;
    width: 100%;
}
// 默认加webkit前缀
.css-prefix(@property,@value){
    -webkit-@{property}:@value;
    @{property}:@value;
}
// row | column | row-reverse
// 默认值：column
.flex-direction(@value)when(@value=row){
    -ms-flex-direction:@value;
    .css-prefix(box-orient,horizontal);
    .css-prefix(flex-direction,@value);
}
.flex-direction(@value:column)when(default()){
    -ms-flex-direction:@value;
    .css-prefix(box-orient,vertical);
    .css-prefix(flex-direction,@value);
}
.flex-direction(@value)when(@value=row-reverse){
    -ms-flex-direction:@value;
    .css-prefix(box-direction,reverse);
    .css-prefix(flex-direction,@value);
}
// flex-start | flex-end | center | space-between
// 默认值：center
.justify-content(@value)when(@value=flex-start){
    -ms-flex-pack:start;
    .css-prefix(box-pack,start);
    .css-prefix(justify-content,@value);
}
.justify-content(@value)when(@value=flex-end){
    -ms-flex-pack:end;
    .css-prefix(box-pack,end);
    .css-prefix(justify-content,@value);
}
.justify-content(@value:center)when(default()){
    -ms-flex-pack:@value;
    .css-prefix(box-pack,@value);
    .css-prefix(justify-content,@value);
}
.justify-content(@value)when(@value=space-between){
    -ms-flex-pack:justify;
    .css-prefix(box-pack,justify);
    .css-prefix(justify-content,@value);
}
// flex-start | flex-end | center | stretch
// 默认值：center
.align-items(@value)when(@value=flex-start){
    -ms-flex-align:start;
    .css-prefix(box-align,start);
    .css-prefix(align-items,@value);
}
.align-items(@value)when(@value=flex-end){
    -ms-flex-align:end;
    .css-prefix(box-align,end);
    .css-prefix(align-items,@value);
}
.align-items(@value:center)when(default()){
    -ms-flex-align:@value;
    .css-prefix(box-align,@value);
    .css-prefix(align-items,@value);
}
.align-items(@value)when(@value=stretch){
    -ms-flex-align:@value;
    .css-prefix(box-align,@value);
    .css-prefix(align-items,@value);
}
.radius(@x:5px){
    -webkit-border-radius: @x;
    border-radius: @x;
}
.box-shadow(@shadow:0 0 5px #ccc){
    box-shadow:@shadow;
    -webkit-box-shadow:@shadow;
}
.box-sizing(@style:border-box){
    -webkit-box-sizing: @style;
    box-sizing:@style;
}
.transform-origin(...){
    -webkit-transform-origin:@arguments;
    transform-origin:@arguments;
}
.transform(@arg){
    -webkit-transform:@arg;
    -ms-transform:@arg;
    transform:@arg;
}
// 转换，连写
// .transform(rotate(45deg) scale(.5);join);
.transform(@arg;@join)when(@join=join){
    -webkit-transform:@arg;
    transform:@arg;
}
.translate(@x:0; @y:0){
    .transform(translate(@x, @y));
}
.translate3d(@x:0; @y:0; @z:0){
    .transform(translate3d(@x, @y, @z));
}
.rotate(@degree:0){
    .transform(rotate(@degree));
}
.rotate3d(@x:0; @y:0; @z:0; @degree:0){
    .transform(rotate3d(@x, @y, @z, @degree));
}
.scale(@num:1){
    .transform(scale(@num));
}
.scale3d(@x:1; @y:1; @z:1){
    .transform(scale3d(@x, @y, @z));
}
.skew(@x:0; @y:0){
    .transform(skew(@x, @y));
}
// 过渡
// .transition(all 0.5s ease);
// .transition(visibility,opacity 0.5s;);
// .transition(transform 0.5s;true);
.transition(@arg){
    -webkit-transition:@arg;
    transition:@arg;
}
.transition(@arg;@prefix)when(@prefix=true){
    -webkit-transition:e("-webkit-@{arg}");
    transition:@arg;
}
.gradient(@path; @colorX; @colorY){
    background-image: -webkit-linear-gradient(@path, @colorX, @colorY);
    background-image:-ms-linear-gradient(@path, @colorX, @colorY);
    background-image: linear-gradient(@path, @colorX, @colorY);
}
// 线性渐变
// .linear-gradient(60deg; #000, #fff);
.linear-gradient(@degree; @colors){
    @degreeW3c : abs(@degree) + 90;
    background-image: -webkit-linear-gradient(@degree,@colors);
    background-image: -ms-linear-gradient(@degree,@colors);
    background-image: linear-gradient(@degreeW3c,@colors);
}
.animation(...){
    -webkit-animation:@arguments;
    animation:@arguments;
}
.user-select(@select: text){
    -webkit-user-select:@select;
    -ms-user-select:@select;
    user-select:@select;
}

// 简写
.clearfix(){
    &:after{
        content:"";
        display:table;
        clear:both;
    }
}
.ellipsis(){
    overflow: hidden;
    white-space: nowrap;
    text-overflow:ellipsis;
}
// padding比例缩放
// .padding-propor(2/3);
.padding-propor(@arg:1){
    &:after{
        content: '';
        display: block;
        width: 100%;
        padding-top: percentage(@arg);
    }
}

// 待解决
.ell(){
    .ellipsis();
}

.flexbox_column(){
    -webkit-box-orient:vertical;
    -webkit-flex-direction:column;
    -ms-flex-direction:column;
    flex-direction:column;
}
.flexbox_center(){
    -webkit-box-orient: horizontal;
    -webkit-box-pack: center;
    -webkit-box-align: center;
}





